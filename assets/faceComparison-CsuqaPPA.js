const d=async()=>(console.log("Using face-api.js descriptors for face comparison"),Promise.resolve(!0)),p=(r,t)=>{const i=document.createElement("canvas"),n=i.getContext("2d");return i.width=t.width,i.height=t.height,n.drawImage(r,t.x,t.y,t.width,t.height,0,0,t.width,t.height),i},u=r=>r.toDataURL("image/jpeg",.8),m=(r,t)=>{if(r.length!==t.length)throw new Error("Vectors must have the same length");let i=0,n=0,s=0;for(let e=0;e<r.length;e++)i+=r[e]*t[e],n+=r[e]*r[e],s+=t[e]*t[e];return n=Math.sqrt(n),s=Math.sqrt(s),n===0||s===0?0:i/(n*s)},h=async(r,t)=>{const i={faceApiSimilarity:0,euclideanSimilarity:0,combinedScore:0};if(r.descriptor&&t.descriptor){const n=m(Array.from(r.descriptor),Array.from(t.descriptor));let s;n>=0?s=n:s=Math.max(0,.1+n*.1),i.faceApiSimilarity=Math.max(0,Math.min(1,s));let e=0;for(let o=0;o<r.descriptor.length;o++){const a=r.descriptor[o]-t.descriptor[o];e+=a*a}e=Math.sqrt(e),i.euclideanSimilarity=Math.max(0,Math.min(1,1-e/1.2))}return i.combinedScore=i.faceApiSimilarity,i},g=async(r,t)=>{const i=[];for(const n of t){const s={childFace:n,parentSimilarities:[],mostSimilarParent:null,confidence:0};for(const e of r){const o=await h(n,e);s.parentSimilarities.push({parent:e,similarity:o.combinedScore,details:o})}if(s.parentSimilarities.length>0){const e=s.parentSimilarities.reduce((o,a)=>a.similarity>o.similarity?a:o);s.mostSimilarParent=e.parent,s.confidence=e.similarity}i.push(s)}return i},f=async r=>{if(r.length<2)return{isValid:!0,confidence:1,message:"Single photo - no validation needed"};const t={isValid:!0,confidence:0,consistencyScore:0,photoResults:[],recommendations:[]},i=[];for(let n=0;n<r.length;n++){const s=r[n];i.push(s.resemblanceResults)}if(i.length>=2){let n=0,s=0;for(let e=0;e<i[0].length;e++){const o=i[0][e];let a=!0;for(let c=1;c<i.length;c++){const l=i[c][e];l&&o.mostSimilarParent&&l.mostSimilarParent.label!==o.mostSimilarParent.label&&(a=!1),s++}a&&n++}t.consistencyScore=s>0?n/s:1,t.confidence=t.consistencyScore,t.consistencyScore<.7?(t.isValid=!1,t.recommendations.push("Results vary significantly across photos. Consider using clearer images or photos with better lighting.")):t.consistencyScore<.9?t.recommendations.push("Good consistency across photos. Results are reliable."):t.recommendations.push("Excellent consistency across all photos. High confidence in results.")}return t};export{g as analyzeFamilyResemblance,u as canvasToBase64,h as comparefaces,m as cosineSimilarity,p as extractFaceImage,d as initializeEmbeddingModel,f as validateAcrossMultiplePhotos};
